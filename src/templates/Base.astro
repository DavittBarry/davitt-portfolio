---
import { Footer } from '@/partials/Footer';
import { Navbar } from '@/partials/Navbar';
import { AppConfig } from '@/utils/AppConfig';

export interface Props {
  head: {
    title: string;
    description: string;
  };
}

const {
  head: { title, description },
} = Astro.props as Props;
---

<html lang="en" class="bg-neutral-950">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="author" content={AppConfig.author} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/assets/images/avatar.jpg" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content="/assets/images/avatar.jpg" />

    <!-- Additional SEO -->
    <meta
      name="keywords"
      content="Davitt Barry, IT professional, web developer, musician, music producer, audio engineer, Uusimaa, Finland"
    />
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href="https://davittbarry.com" />

    <link rel="alternate" type="application/rss+xml" href="/rss.xml" />
    <link rel="icon" type="image/x-icon" href="/favicon.png" />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="flex min-h-screen flex-col bg-gradient-to-b from-neutral-950 via-neutral-900 to-neutral-950 text-neutral-100 antialiased"
  >
    <!-- Subtle texture overlay -->
    <div class="pointer-events-none fixed inset-0 opacity-[0.015]">
      <svg width="100%" height="100%">
        <filter id="noise">
          <feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="4"
          ></feTurbulence>
        </filter>
        <rect width="100%" height="100%" filter="url(#noise)"></rect>
      </svg>
    </div>

    <!-- Gradient accent overlay -->
    <div class="pointer-events-none fixed inset-0">
      <div
        class="absolute left-1/4 top-0 h-96 w-96 rounded-full bg-accent/5 blur-3xl"
      >
      </div>
      <div
        class="absolute bottom-0 right-1/4 h-96 w-96 rounded-full bg-cyan-500/5 blur-3xl"
      >
      </div>
    </div>

    <Navbar />

    <main class="relative z-10 flex-grow">
      <slot />
    </main>

    <Footer />

    <!-- Scroll to Top Button -->
    <button
      id="scroll-to-top"
      class="fixed bottom-8 right-6 z-50 hidden h-14 w-14 items-center justify-center rounded-full border border-accent bg-accent/90 text-neutral-900 backdrop-blur-sm transition-all duration-300 hover:scale-110 hover:border-accent hover:bg-neutral-900 hover:text-accent md:right-8 md:h-16 md:w-16"
      aria-label="Scroll to top"
    >
      <svg
        class="h-6 w-6 md:h-7 md:w-7"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
      </svg>
    </button>

    <!-- Scroll to Top Script -->
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        const scrollButton = document.getElementById('scroll-to-top');
        const halfwayPoint = document.documentElement.scrollHeight / 2;

        function checkScroll() {
          const scrolled =
            window.pageYOffset || document.documentElement.scrollTop;
          const windowHeight = window.innerHeight;
          const documentHeight = document.documentElement.scrollHeight;
          const halfwayDown = (documentHeight - windowHeight) / 2;

          if (scrolled > halfwayDown) {
            scrollButton?.classList.remove('hidden');
            scrollButton?.classList.add('flex');
          } else {
            scrollButton?.classList.add('hidden');
            scrollButton?.classList.remove('flex');
          }
        }

        window.addEventListener('scroll', checkScroll);

        scrollButton?.addEventListener('click', function () {
          window.scrollTo({
            top: 0,
            behavior: 'smooth',
          });
        });

        // Check on initial load
        checkScroll();
      });
    </script>
  </body>
</html>

<style>
  :root {
    --accent: #f97316;
  }

  ::selection {
    background-color: var(--accent);
    color: #0a0a0a;
  }

  ::-webkit-scrollbar {
    width: 10px;
  }

  ::-webkit-scrollbar-track {
    background: #171717;
  }

  ::-webkit-scrollbar-thumb {
    background: #404040;
    border-radius: 0;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #525252;
  }
</style>

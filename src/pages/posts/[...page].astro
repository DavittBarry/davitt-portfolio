---
import type {
  FrontmatterPage,
  IFrontmatter,
} from 'astro-boilerplate-components';
import {
  NewerOlderPagination,
  PaginationHeader,
  Section,
} from 'astro-boilerplate-components';

import { CTA } from '@/partials/CTA';
import Base from '@/templates/Base.astro';
import { AppConfig } from '@/utils/AppConfig';
import { sortByDate } from '@/utils/Posts';

type GetStaticPaths = {
  paginate: any;
};

export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const allPosts = await Astro.glob<IFrontmatter>('./src/pages/posts/*.md');
  const sortedPosts = sortByDate(allPosts);
  return paginate(sortedPosts, { pageSize: 6 });
}

interface Props {
  page: FrontmatterPage;
}

const { page } = Astro.props as Props;
const titleSuffix = ` - ${AppConfig.site_name}`;
const titleBase = `Blog page ${page.currentPage}`;
const title = titleBase + titleSuffix;
const description =
  'Pagination example built with Astro styled with Tailwind CSS.';
---

<Base head={{ title, description }}>
  <Section>
    <PaginationHeader
      title="Random title here"
      description="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
    />
  </Section>

  <Section>
    <!-- Loop through postList and render each post's content -->
    {page.data.map((post, index) => (
      <article key={index}>
        <h2>{post.frontmatter.title}</h2>
        <p>{post.frontmatter.description}</p>
        <div>{post.markdownContent}</div>
      </article>
    ))}
  </Section>

  <Section>
    <NewerOlderPagination page={page} />
  </Section>

  <CTA />
</Base>
